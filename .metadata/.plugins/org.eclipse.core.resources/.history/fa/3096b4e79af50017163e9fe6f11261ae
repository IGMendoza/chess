package chess;

import java.util.ArrayList;

public class Piece {
	private String type;
	private String name;
	private String position;
	private String color;
	private int hasMoved = 0;
	
	Piece(String type, String name, String color) {
		this.type	= type;
		this.name	= name;
		this.color	= color;
	}
	
	public void setPosition(String n_position) {
		this.position = n_position;
	}
	
	public String getPosition() {
		return this.position;
	}
	
	public String getName() {
		return this.name;
	}
	
	public int getX() {
		return (int)(this.position.charAt(1)) - 49;
	}
	
	public int getY() {
		return 104 - (int)(this.position.charAt(0));
	}
	
	public String getType() {
		return this.type;
	}
	
	public String toString(){
		return this.color + " " + this.type + ": " + this.name + " at: " + this.position;
	}
	
	public boolean move(String n_position, ArrayList<Piece> enemy) {
		boolean capture = false;
		for(int i = 0; i < enemy.size(); i++) {
			if(enemy.get(i).position.equals(n_position)) {
				capture = true;
				break;
			}
		}
		switch (this.type) {
		case "pawn": 
			System.out.println("ayy");
			if(!capture) {
				if((int)n_position.charAt(1) == (int)this.position.charAt(1) + 2 && 
						n_position.charAt(0) == this.position.charAt(0) && this.hasMoved == 0) {
					this.position = n_position;
					this.hasMoved++;
					return true;
				}
				if((int)n_position.charAt(1) == (int)this.position.charAt(0) + 1 &&
						n_position.charAt(0) == this.position.charAt(0)) {
					this.position = n_position;
					this.hasMoved++;
					return true;				
				}
			}
			if(capture) {
				if((int)n_position.charAt(1) == (int)this.position.charAt(1) + 1 &&
						((int)n_position.charAt(0) == (int)this.position.charAt(0) + 1 ||
								(int)n_position.charAt(0) == (int)this.position.charAt(0) - 1)) {
					
				}
			}
			return false;
		}
		return false;
	}
}
